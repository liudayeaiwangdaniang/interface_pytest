{"name": "test_register_ok[case1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2 == 0\n  +2\n  -0", "trace": "self = <TestCases.test_register.TestRegister object at 0x000002C821EF35C0>\ncase = {'check_sql': 'select * from member where mobile_phone=\"15019738500\"', 'expected': '{\"code\": 0, \"msg\":\"密码为空\"}', 'id': 2, 'method': 'post', ...}\ndb = <Common.handle_db.HandleDB object at 0x000002C821E39278>\n\n    @pytest.mark.parametrize(\"case\",cases)\n    def test_register_ok(self,case,db):\n        logger.info(\"执行用例{}：{}\".format(case[\"id\"],case[\"title\"]))\n    \n    # 替换 - 动态\n        # request_data里的 #phone# 替换成 new_phone\n        # check_sql里的 #phone# 替换成 new_phone\n        if case[\"request_data\"].find(\"#phone#\") != -1: # != -1 说明能找到下标\n            new_phone = get_new_phone()\n            case = replace_mark_with_data(case,\"#phone#\",new_phone)\n    \n    # 步骤 测试数据-发起请求\n        response = send_requsets(case[\"method\"],case[\"url\"],case[\"request_data\"])\n    \n    # 期望结果，从字符串转换为字典\n        expected = eval(case[\"expected\"])\n    \n    # 断言 -code == 0  msg == ok\n        logger.info(\"用例的期望结果为：{}\".format(case[\"expected\"]))\n        try:\n>           assert response.json()[\"code\"] == expected[\"code\"]\nE           assert 2 == 0\nE             +2\nE             -0\n\nTestCases\\test_register.py:56: AssertionError"}, "parameters": [{"name": "case", "value": "{'id': 2, 'title': '注册成功-不带用户名', 'method': 'post', 'url': 'member/register', 'request_data': '{\"mobile_phone\": \"15019738500\", \"pwd\": \"1234567890\",\"type\":1}', 'expected': '{\"code\": 0, \"msg\":\"密码为空\"}', 'check_sql': 'select * from member where mobile_phone=\"15019738500\"'}"}], "start": 1651327495275, "stop": 1651327495390, "uuid": "31c4a96f-d308-4fc7-9c86-d8b958f14ae4", "historyId": "12cf2168d3a3ccfa3a271b50c0792fe1", "testCaseId": "2f9a366adbe4c740b2a40d648c38b44b", "fullName": "TestCases.test_register.TestRegister#test_register_ok", "labels": [{"name": "tag", "value": "P0"}, {"name": "tag", "value": "@pytest.mark.usefixtures('start_mark')"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_register"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "V_YARUQIU-NB3"}, {"name": "thread", "value": "13256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_register"}]}